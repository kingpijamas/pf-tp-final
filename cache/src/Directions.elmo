Elm.Directions = Elm.Directions || {};
Elm.Directions.make = function (elm) {
   elm.Directions = elm.Directions || {};
   if (elm.Directions.values)
   return elm.Directions.values;
   var N = Elm.Native,
   _N = N.Utils.make(elm),
   _L = N.List.make(elm),
   _E = N.Error.make(elm),
   _J = N.JavaScript.make(elm),
   $moduleName = "Directions";
   var Text = Elm.Text.make(elm);
   var Text = Elm.Text.make(elm);
   var Basics = Elm.Basics.make(elm);
   var Signal = Elm.Signal.make(elm);
   var List = Elm.List.make(elm);
   var Maybe = Elm.Maybe.make(elm);
   var Time = Elm.Time.make(elm);
   var Prelude = Elm.Prelude.make(elm);
   var Graphics = Graphics || {};
   Graphics.Element = Elm.Graphics.Element.make(elm);
   var Color = Elm.Color.make(elm);
   var Graphics = Graphics || {};
   Graphics.Collage = Elm.Graphics.Collage.make(elm);
   var _op = {};
   var W = {ctor: "W"};
   var SW = {ctor: "SW"};
   var SE = {ctor: "SE"};
   var S = {ctor: "S"};
   var NW = {ctor: "NW"};
   var NE = {ctor: "NE"};
   var N = {ctor: "N"};
   var E = {ctor: "E"};
   var lft = function (d) {
      return function () {
         switch (d.ctor)
         {case "E": return NE;
            case "N": return NW;
            case "NE": return N;
            case "NW": return W;
            case "S": return SE;
            case "SE": return E;
            case "SW": return S;
            case "W": return SW;}
         _E.Case($moduleName,
         "between lines 6 and 14");
      }();
   };
   var rght = function (d) {
      return function () {
         switch (d.ctor)
         {case "E": return SE;
            case "N": return NE;
            case "NE": return E;
            case "NW": return N;
            case "S": return SW;
            case "SE": return S;
            case "SW": return W;
            case "W": return NW;}
         _E.Case($moduleName,
         "between lines 17 and 25");
      }();
   };
   elm.Directions.values = {_op: _op
                           ,lft: lft
                           ,rght: rght
                           ,N: N
                           ,NE: NE
                           ,E: E
                           ,SE: SE
                           ,S: S
                           ,SW: SW
                           ,W: W
                           ,NW: NW};
   return elm.Directions.values;
};